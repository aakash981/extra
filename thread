::::::::::::::::::::::::::::::::::::::::::::::Ques 1::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

using System;

using System.Collections.Generic;

using System.Linq;

using System.Text;

using System.Threading;



class SortScores

{

    int count = 0;

    string _matchType;

    public string MatchType

    {

        get { return _matchType; }

        set { _matchType = value; }

    }

    string _scoreString;

    public string ScoreString

    {

        get { return _scoreString; }

        set { _scoreString = value; }

    }

    int[] _scores;

    public int[] Scores

    {

        get { return _scores; }

        set { _scores = value; }

    }

    public SortScores(string s1, string s2)

    {

        MatchType = s1;

        ScoreString = s2;

    }

    public void run()

    {

        lock (this)

        {



            string[] t = ScoreString.Split(new char[] { ',' });



            Scores = new int[t.Length];

            for (int i = 0; i < t.Length; i++)

            {

                Scores[i] = Convert.ToInt32(t[i]);

            }

            Array.Sort(Scores);

            count = t.Length;

        }

    }

    public void GetScores()

    {

        Console.WriteLine("Match : " + MatchType);

        for (int i = 0; i < count; i++)

            Console.WriteLine(Scores[i]);

    }

}



class Program

{

    public static void Main()

    {

        Console.WriteLine("Enter the match");

        string s1 = Console.ReadLine();

        Console.WriteLine("Enter the match Scores");

        string m1 = Console.ReadLine();

        SortScores k1 = new SortScores(s1, m1);

        Thread t1 = new Thread(new ThreadStart(k1.run));



        Console.WriteLine("Enter the match");

        string s2 = Console.ReadLine();

        Console.WriteLine("Enter the match Scores");



string m2 = Console.ReadLine();

        SortScores k2 = new SortScores(s2, m2);

        Thread t2 = new Thread(new ThreadStart(k2.run));



        Console.WriteLine("Enter the match");

        string s3 = Console.ReadLine();

        Console.WriteLine("Enter the match Scores");

        string m3 = Console.ReadLine();

        SortScores k3 = new SortScores(s3, m3);

        Thread t3 = new Thread(new ThreadStart(k3.run));

        t1.Start();

        t2.Start();

        t3.Start();

        t1.Join();

        t2.Join();

        t3.Join();

        

        Console.WriteLine("Ordered Score List");

        k1.GetScores();

        k2.GetScores();

        k3.GetScores();

        Console.ReadLine();

    }

}

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;

public partial class _Default : Page
{

    protected void Page_Load(object sender, EventArgs e)
    {

    }
    protected void TextBox6_TextChanged(object sender, EventArgs e)
    {

    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        try
        {
            SqlConnection con = new SqlConnection(@"Data Source=(localdb)\v11.0;Integrated Security=True;Connect Timeout=15;Encrypt=False;TrustServerCertificate=False");
            con.Open();
           // SqlDataReader dr;

            string insert = "insert into table1(user_id,first_name,last_name,email,password,emp_type) values(@p1,@p2,@p3,@p4,@p5,@p6)";
            SqlCommand cmd = new SqlCommand(insert, con);
            cmd.Parameters.AddWithValue("@p1", TextBox1.Text);
            cmd.Parameters.AddWithValue("@p2", TextBox2.Text);
            cmd.Parameters.AddWithValue("@p3", TextBox3.Text);
            cmd.Parameters.AddWithValue("@p4", TextBox4.Text);
            cmd.Parameters.AddWithValue("@p5", TextBox5.Text);
            cmd.Parameters.AddWithValue("@p6", TextBox6.Text);
            cmd.ExecuteNonQuery();
            Response.Write("Student registeration Successfully!!!thank you");
            con.Close();
        }
        catch (Exception ex)
        {
            Response.Write("error" + ex.ToString());
        }  
    }
    protected void Login1_Authenticate(object sender, AuthenticateEventArgs e)
    {

    }
}
=====================================================================
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace Question_Paper_Generator
{
    public partial class SignInUser : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            
        }

        protected void Button1_Click(object sender, EventArgs e)
        {
     
             SqlConnection con = new SqlConnection(@"Data Source=(localdb)\Projects;Initial Catalog=master;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False");
             con.Open();
            SqlCommand cmd = new SqlCommand("select * from userdetails where userid = @username and password = @password;",con);
            
            cmd.Parameters.AddWithValue("@username", empidTB.Text);
            cmd.Parameters.AddWithValue("@password", passwordTB.Text);
            cmd.Connection = con;
            
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            da.Fill(dt);

            if (dt.Rows.Count > 0)

            {
                Session.Add("Userid", empidTB.Text);
                Response.Redirect("~/UserHomePage.aspx");
            }
            else
            {
                Response.Write("Invalid username or password!!!!!!!!!");
            }
       
        }
    }
}
